<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <modules>
        <!--eureka 服务端-->
        <module>eureka-server-dalston</module>

        <!--eureka 客户端-->
        <module>eureka-client-dalston</module>

        <!--eureka client ribbon 客户端 集成Hystrix 和 Hystrix Dashboard-->
        <module>eureka-ribbon-client-dalston</module>

        <!--eureka client+feign 集成Hystrix 和 Hystrix Dashboard -->
        <module>eureka-feign-client-dalston</module>

        <!--eureka turbine 监控-->
        <module>eureka-moinitor-client</module>

        <!--eureka zuul 动态路由-->
        <module>eureka-zuul-client-dalston</module>

        <!--
            下面的项目为测试使用，可以不使用
            spring-boot-dalston
                为spring boot 学习demo
            spring-boot-learn
                为学习ImportBeanDefinitionRegistrar接口使用
            ribbon-client-dalston
                ribbon client 单独使用，不需要集成到项目中
            eureka-ribbon-hystrix-client-dalston
                eureka client ribbon hystrix hystrix-dashboard 集成，功能已经迁移到eureka-ribbon-client-dalston
            eureka-feign-hystrix-client-dalston
                eureka client feign hystrix hystrix-dashboard 集成，功能已经迁移到eureka-feign-client-dalston

        -->
        <module>spring-boot-dalston</module>
        <!--
            <module>spring-boot-learn</module>
            <module>ribbon-client-dalston</module>
            <module>eureka-ribbon-hystrix-client-dalston</module>
            <module>eureka-feign-hystrix-client-dalston</module>
        -->

    </modules>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.20.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.winning.devops</groupId>
    <artifactId>winning-cloud-dalston</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- 编译时的编码 -->
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <spring-cloud.version>Dalston.SR5</spring-cloud.version>
        <!--<spring-cloud.version>Edgware.SR5</spring-cloud.version>-->
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
</project>
